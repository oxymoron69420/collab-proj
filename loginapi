import { pool } from '../../db.js';
import bcrypt from 'bcryptjs';
import jwt from 'jsonwebtoken';

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Only POST method allowed' });
  }

  const { email, password } = req.body;
  console.log('Login attempt for:', email);

  try {
    // ✅ 1. Check user in the "use" table (quoted due to SQL keyword)
    const result = await pool.query('SELECT * FROM tire WHERE email = $1', [email]);
    const user = result.rows[0];
    console.log("DB user:", user);

    if (!user) {
      return res.status(401).json({ message: 'User not found' });
    }

    // ✅ 2. Compare password with hashed password
    const isValid = await bcrypt.compare(password, user.password);
    console.log("Password match:", isValid);

    if (!isValid) {
      return res.status(401).json({ message: 'Invalid password' });
    }

    // ✅ 3. Sign and return JWT token
    const token = jwt.sign(
      { userId: user.id },
      process.env.JWT_SECRET || 'secret123',
      { expiresIn: '1h' }
    );

    // ✅ Send token in cookie
    res.setHeader('Set-Cookie', `token=${token}; Path=/; Max-Age=3600; SameSite=Lax`);
    return res.status(200).json({ message: 'Login successful' });

  } catch (error) {
    console.error('Login error:', error);
    return res.status(500).json({ message: 'Internal Server Error' });
  }
} 
